{"version":3,"sources":["components/SendETHForm.js","actions/types.js","actions/index.js","helpers/ERC20_ABI.js","helpers/INFURA_NODES.js","components/AccountForm.js","components/AccountCard.js","components/SendERC20TokensForm.js","components/SendTabs.js","components/SendCard.js","components/TokensList.js","components/AddTokenForm.js","components/AddTokenModal.js","components/TokensCard.js","components/NavbarCustom.js","components/Content.js","components/App.js","reducers/accountReducer.js","reducers/web3Reducer.js","reducers/tokensListReducer.js","helpers/DEFAULT_TOKENS.js","reducers/balancesReducer.js","reducers/ethBalanceReducer.js","reducers/networkReducer.js","reducers/index.js","index.js"],"names":["EthereumTx","require","Transaction","web3","Web3","validateAddress","account","error","undefined","utils","isAddress","validateValue","value","isNaN","SendETHForm","state","sending","sendError","finishedTransaction","renderError","meta","touched","Text","className","validatePrivateKey","privateKey","props","renderValueInput","formProps","Group","Label","Control","type","autoComplete","input","placeholder","renderSendToInput","renderGasPriceInput","renderGasLimitInput","renderPrivateKeyInput","renderSendMessage","message","transactionHash","gasUsed","sendEth","formValues","a","setState","web3State","Buffer","from","to","sendTo","valueInEther","eth","estimateGas","amount","toWei","getGasPrice","estimateGasPrice","gasPrice","gasLimit","getTransactionCount","txnCount","rawTx","nonce","numberToHex","tx","network","chain","toLowerCase","hardfork","sign","serializedTx","serialize","sendSignedTransaction","toString","onSubmit","this","render","handleSubmit","name","component","validate","variant","React","Component","connect","CHANGE_ACCOUNT","SET_BALANCES","ADD_TOKEN","REMOVE_TOKEN","SET_ETH_BALANCE","SET_WEB3_PROVIDER","CHANGE_NETWORK","fetchAccountBalances","tokensList","contractABI","newBalances","token","contract","Contract","address","methods","balanceOf","call","balance","formatedBalance","fromWei","push","setBalances","dispatch","payload","getAccountBalance","getBalance","ERC20_ABI","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","INFURA_NODES","Mainnet","Ropsten","Kovan","Rinkeby","Goerli","LocalHost8545","validateAccount","AccountForm","selectedNetwork","Form","renderInput","changeAccount","setEthBalance","handleSelect","setWeb3Provider","changeNetwork","renderNetworkSelectorDropdown","DropdownButton","title","onSelect","Dropdown","Item","eventKey","Button","newBalance","providerURL","AccountCard","Card","Body","Title","SendERC20TokensForm","renderTokenAddressInput","Spinner","sendERC20Token","valueInERC20Tokens","provider","HDWalletProvider","currentProvider","host","url","tokenTransferWeb3","ERC20Build","abi","tokenAddress","transfer","gas","send","sentTransaction","SendTabs","Tabs","defaultActiveKey","id","Tab","SendCard","TokensList","onClickRemoveToken","removeToken","renderTokensList","balances","map","removing","onClick","bind","size","indexOf","Table","striped","bordered","hover","responsive","validateTokenName","AddTokenForm","validateTokenAddress","find","renderAddressInput","renderNameInput","addToken","tokenName","AddTokenModal","useState","show","setShow","Modal","onHide","Header","closeButton","TokensCard","onClickRemove","NavbarCustom","Navbar","bg","Container","Col","xs","Brand","Collapse","ethBalance","Content","Row","App","accountReducer","action","INITIAL_STATE","web3Reducer","tokensListReducer","filter","balancesReducer","ethBalanceReducer","combineReducers","networkReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.580a7541.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Web3 from \"web3\";\r\nconst EthereumTx = require(\"ethereumjs-tx\").Transaction;\r\n\r\nconst web3 = new Web3();\r\n\r\nconst validateAddress = (account) => {\r\n  let error = undefined;\r\n  if (!web3.utils.isAddress(account)) {\r\n    error = \"Invalid address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validateValue = (value) => {\r\n  let error = undefined;\r\n  if (!value) {\r\n    error = undefined;\r\n  } else if (isNaN(value)) {\r\n    error = \"Invalid value\";\r\n  }\r\n  return error;\r\n};\r\n\r\nclass SendETHForm extends React.Component {\r\n  state = {\r\n    sending: false,\r\n    sendError: null,\r\n    finishedTransaction: null,\r\n  };\r\n\r\n  renderError = (meta) => {\r\n    if (meta.touched && meta.error) {\r\n      return <Form.Text className=\"text-danger\">{meta.error}</Form.Text>;\r\n    }\r\n  };\r\n\r\n  validatePrivateKey = (privateKey) => {\r\n    let error = undefined;\r\n    if (!this.props.account) {\r\n      error = \"Please set an account first\";\r\n    } else if (!privateKey) {\r\n      error = \"Please enter a private key\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  renderValueInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Value</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"ETH\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderSendToInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Send to</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Address\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderGasPriceInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Gas Price [Gwei]</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Gas Price [Gwei]\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderGasLimitInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Gas Limit</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Gas Limit\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderPrivateKeyInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Private key</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Private key\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderSendMessage = () => {\r\n    if (this.state.sending) {\r\n      return (\r\n        <div className=\"mt-3\">\r\n          <Spinner />\r\n          Sending...\r\n        </div>\r\n      );\r\n    } else if (this.state.sendError) {\r\n      return <div className=\"mt-3\">Error: {this.state.sendError.message}</div>;\r\n    } else if (this.state.finishedTransaction) {\r\n      return (\r\n        <div>\r\n          <div className=\"mt-3\">\r\n            Transaction Hash: {this.state.finishedTransaction.transactionHash}\r\n          </div>\r\n          <div>Gas Used: {this.state.finishedTransaction.gasUsed}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  sendEth = async (formValues) => {\r\n    this.setState({\r\n      sending: true,\r\n      sendError: null,\r\n      finishedTransaction: null,\r\n    });\r\n    try {\r\n      const web3State = this.props.web3;\r\n\r\n      const privateKey = Buffer.from(formValues.privateKey, \"hex\");\r\n\r\n      const from = this.props.account;\r\n      const to = formValues.sendTo;\r\n      const valueInEther = formValues.value;\r\n      const estimateGas = await web3State.eth.estimateGas({\r\n        from,\r\n        to,\r\n        amount: web3State.utils.toWei(valueInEther, \"ether\"),\r\n      });\r\n      const estimateGasPrice = await web3State.eth.getGasPrice();\r\n\r\n      let gasPrice = formValues.gasPrice\r\n        ? web3State.utils.toWei(formValues.gasPrice, \"gwei\")\r\n        : estimateGasPrice;\r\n      let gasLimit = formValues.gasLimit ? formValues.gasLimit : estimateGas;\r\n\r\n      const txnCount = await web3State.eth.getTransactionCount(from, \"pending\");\r\n\r\n      let rawTx = {\r\n        nonce: web3State.utils.numberToHex(txnCount),\r\n        from,\r\n        to,\r\n        value: web3State.utils.numberToHex(\r\n          web3State.utils.toWei(valueInEther, \"ether\")\r\n        ),\r\n        gasLimit: web3State.utils.numberToHex(gasLimit),\r\n        gasPrice: web3State.utils.numberToHex(gasPrice),\r\n      };\r\n\r\n      let tx = null;\r\n      if (this.props.network === \"LocalHost8545\") {\r\n        tx = new EthereumTx(rawTx);\r\n      } else {\r\n        tx = new EthereumTx(rawTx, {\r\n          chain: this.props.network.toLowerCase(),\r\n          hardfork: \"petersburg\",\r\n        });\r\n      }\r\n\r\n      tx.sign(privateKey);\r\n\r\n      const serializedTx = tx.serialize();\r\n\r\n      const finishedTransaction = await web3State.eth.sendSignedTransaction(\r\n        \"0x\" + serializedTx.toString(\"hex\")\r\n      );\r\n\r\n      this.setState({ sending: false, sendError: null, finishedTransaction });\r\n    } catch (error) {\r\n      this.setState({ sending: false, sendError: error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FinalForm\r\n        onSubmit={this.sendEth}\r\n        render={({ handleSubmit }) => (\r\n          <Form name=\"sendETHForm\" onSubmit={handleSubmit}>\r\n            <Field\r\n              name=\"value\"\r\n              component={this.renderValueInput}\r\n              validate={validateValue}\r\n            />\r\n            <Field\r\n              name=\"sendTo\"\r\n              component={this.renderSendToInput}\r\n              validate={validateAddress}\r\n            />\r\n            <Field\r\n              name=\"gasPrice\"\r\n              component={this.renderGasPriceInput}\r\n              validate={validateValue}\r\n            />\r\n            <Field\r\n              name=\"gasLimit\"\r\n              component={this.renderGasLimitInput}\r\n              validate={validateValue}\r\n            />\r\n            <Field\r\n              name=\"privateKey\"\r\n              component={this.renderPrivateKeyInput}\r\n              validate={this.validatePrivateKey}\r\n            />\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Send\r\n            </Button>\r\n\r\n            {this.renderSendMessage()}\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps)(SendETHForm);\r\n","export const CHANGE_ACCOUNT = \"CHANGE_ACCOUNT\";\r\nexport const SET_BALANCES = \"SET_BALANCES\";\r\nexport const ADD_TOKEN = \"ADD_TOKEN\";\r\nexport const REMOVE_TOKEN = \"REMOVE_TOKEN\";\r\nexport const SET_ETH_BALANCE = \"SET_ETH_BALANCE\";\r\nexport const SET_WEB3_PROVIDER = \"SET_WEB3_PROVIDER\";\r\nexport const CHANGE_NETWORK = \"CHANGE_NETWORK\";\r\n","import {\r\n  CHANGE_ACCOUNT,\r\n  SET_BALANCES,\r\n  ADD_TOKEN,\r\n  REMOVE_TOKEN,\r\n  SET_ETH_BALANCE,\r\n  SET_WEB3_PROVIDER,\r\n  CHANGE_NETWORK,\r\n} from \"./types\";\r\n\r\nexport const changeAccount = (account) => {\r\n  return {\r\n    type: CHANGE_ACCOUNT,\r\n    payload: account,\r\n  };\r\n};\r\n\r\nconst fetchAccountBalances = async (account, tokensList, web3, contractABI) => {\r\n  const newBalances = [];\r\n  if (!web3.utils.isAddress(account)) {\r\n    return newBalances;\r\n  }\r\n  for (let token of tokensList) {\r\n    try {\r\n      const contract = new web3.eth.Contract(contractABI, token.address);\r\n      const balance = await contract.methods.balanceOf(account).call();\r\n      const formatedBalance = web3.utils.fromWei(balance);\r\n      newBalances.push(formatedBalance);\r\n    } catch (error) {\r\n      newBalances.push(\"Not Found\");\r\n    }\r\n  }\r\n  return newBalances;\r\n};\r\n\r\nexport const setBalances = (account, tokensList, web3, contractABI) => {\r\n  return async (dispatch) => {\r\n    const newBalances = await fetchAccountBalances(\r\n      account,\r\n      tokensList,\r\n      web3,\r\n      contractABI\r\n    );\r\n    dispatch({\r\n      type: SET_BALANCES,\r\n      payload: newBalances,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addToken = (tokenAddress, tokenName = \"\") => {\r\n  return {\r\n    type: ADD_TOKEN,\r\n    payload: { name: tokenName, address: tokenAddress },\r\n  };\r\n};\r\n\r\nexport const removeToken = (tokenAddress) => {\r\n  return {\r\n    type: REMOVE_TOKEN,\r\n    payload: tokenAddress,\r\n  };\r\n};\r\n\r\nconst getAccountBalance = async (account, web3) => {\r\n  if (account) {\r\n    const balance = await web3.eth.getBalance(account);\r\n    const formatedBalance = web3.utils.fromWei(balance);\r\n    return formatedBalance;\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const setEthBalance = (account, web3) => {\r\n  return async (dispatch) => {\r\n    const newBalance = await getAccountBalance(account, web3);\r\n    dispatch({\r\n      type: SET_ETH_BALANCE,\r\n      payload: newBalance,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setWeb3Provider = (providerURL) => {\r\n  return {\r\n    type: SET_WEB3_PROVIDER,\r\n    payload: providerURL,\r\n  };\r\n};\r\n\r\nexport const changeNetwork = (network) => {\r\n  return {\r\n    type: CHANGE_NETWORK,\r\n    payload: network,\r\n  };\r\n};\r\n","const ERC20_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint8\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"_owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        name: \"balance\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: \"_to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: \"_owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        name: \"_spender\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [\r\n      {\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    payable: true,\r\n    stateMutability: \"payable\",\r\n    type: \"fallback\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n];\r\n\r\nexport default ERC20_ABI;\r\n","const INFURA_NODES = {\r\n  Mainnet: \"https://mainnet.infura.io/v3/ab7c7512915945deba42542aae6f8066\",\r\n  Ropsten: \"https://ropsten.infura.io/v3/ab7c7512915945deba42542aae6f8066\",\r\n  Kovan: \"https://kovan.infura.io/v3/ab7c7512915945deba42542aae6f8066\",\r\n  Rinkeby: \"https://rinkeby.infura.io/v3/ab7c7512915945deba42542aae6f8066\",\r\n  Goerli: \"https://goerli.infura.io/v3/ab7c7512915945deba42542aae6f8066\",\r\n  LocalHost8545: \"ws://localhost:8545\",\r\n};\r\n\r\nexport default INFURA_NODES;\r\n","import React from \"react\";\r\nimport { Form, Button, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Web3 from \"web3\";\r\nimport {\r\n  changeAccount,\r\n  setEthBalance,\r\n  setBalances,\r\n  setWeb3Provider,\r\n  changeNetwork,\r\n} from \"../actions\";\r\nimport ERC20_ABI from \"../helpers/ERC20_ABI\";\r\nimport INFURA_NODES from \"../helpers/INFURA_NODES\";\r\n\r\nconst web3 = new Web3();\r\n\r\n// Input validation functions\r\n\r\nconst validateAccount = (account) => {\r\n  let error = undefined;\r\n  if (!web3.utils.isAddress(account)) {\r\n    error = \"Invalid account address\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nclass AccountForm extends React.Component {\r\n  state = { selectedNetwork: \"Mainnet\" };\r\n\r\n  renderError = (meta) => {\r\n    if (meta.touched && meta.error) {\r\n      return <Form.Text className=\"text-danger\">{meta.error}</Form.Text>;\r\n    }\r\n  };\r\n\r\n  renderInput = (formProps) => {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>Address</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"0x...\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  onSubmit = async (formValues) => {\r\n    this.props.changeAccount(formValues.account);\r\n    this.props.setEthBalance(formValues.account, this.props.web3);\r\n    this.props.setBalances(\r\n      formValues.account,\r\n      this.props.tokensList,\r\n      this.props.web3,\r\n      ERC20_ABI\r\n    );\r\n  };\r\n\r\n  handleSelect = async (selectedNetwork) => {\r\n    await this.setState({ selectedNetwork });\r\n    this.props.setWeb3Provider(INFURA_NODES[this.state.selectedNetwork]);\r\n    this.props.changeNetwork(this.state.selectedNetwork);\r\n  };\r\n\r\n  renderNetworkSelectorDropdown = () => {\r\n    return (\r\n      <DropdownButton\r\n        className=\"mt-3\"\r\n        title={\r\n          this.state.selectedNetwork ? this.state.selectedNetwork : \"Network\"\r\n        }\r\n        onSelect={this.handleSelect}\r\n        variant=\"secondary\"\r\n      >\r\n        <Dropdown.Item eventKey=\"Mainnet\">Mainnet</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Ropsten\">Ropsten</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Kovan\">Kovan</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Rinkeby\">Rinkeby</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Goerli\">Goerli</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"LocalHost8545\">Localhost8545</Dropdown.Item>\r\n      </DropdownButton>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FinalForm\r\n        onSubmit={this.onSubmit}\r\n        render={({ handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Field\r\n              name=\"account\"\r\n              component={this.renderInput}\r\n              validate={validateAccount}\r\n            />\r\n\r\n            {this.renderNetworkSelectorDropdown()}\r\n            <Button className=\"mt-3\" type=\"submit\">\r\n              Set Account\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeAccount,\r\n  setEthBalance,\r\n  setBalances,\r\n  setWeb3Provider,\r\n  changeNetwork,\r\n})(AccountForm);\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport AccountForm from \"./AccountForm\";\r\n\r\nclass AccountCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>Account</Card.Title>\r\n          <AccountForm />\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport Web3 from \"web3\";\r\nimport HDWalletProvider from \"@truffle/hdwallet-provider\";\r\nimport ERC20Build from \"../helpers/ERC20Build.json\";\r\n\r\nconst web3 = new Web3();\r\n\r\nconst validateAddress = (account) => {\r\n  let error = undefined;\r\n  if (!web3.utils.isAddress(account)) {\r\n    error = \"Invalid address\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst validateValue = (value) => {\r\n  let error = undefined;\r\n  if (!value) {\r\n    error = undefined;\r\n  } else if (isNaN(value)) {\r\n    error = \"Invalid value\";\r\n  }\r\n  return error;\r\n};\r\n\r\nclass SendERC20TokensForm extends React.Component {\r\n  state = {\r\n    sending: false,\r\n    sendError: null,\r\n    finishedTransaction: null,\r\n  };\r\n\r\n  renderError = (meta) => {\r\n    if (meta.touched && meta.error) {\r\n      return <Form.Text className=\"text-danger\">{meta.error}</Form.Text>;\r\n    }\r\n  };\r\n\r\n  validatePrivateKey = (privateKey) => {\r\n    let error = undefined;\r\n    if (!this.props.account) {\r\n      error = \"Please set an account first\";\r\n    } else if (!privateKey) {\r\n      error = \"Please enter a private key\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  renderTokenAddressInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Token Address</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Address\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderValueInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Value</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Tokens\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderSendToInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Send to</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Address\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderGasPriceInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Gas Price [Gwei]</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Gas Price [Gwei]\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderGasLimitInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Gas Limit</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Gas Limit\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderPrivateKeyInput = (formProps) => {\r\n    return (\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Private key</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          {...formProps.input}\r\n          placeholder=\"Private key\"\r\n        />\r\n        <div>{this.renderError(formProps.meta)}</div>\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderSendMessage = () => {\r\n    if (this.state.sending) {\r\n      return (\r\n        <div className=\"mt-3\">\r\n          <Spinner />\r\n          Sending...\r\n        </div>\r\n      );\r\n    } else if (this.state.sendError) {\r\n      return <div className=\"mt-3\">Error: {this.state.sendError.message}</div>;\r\n    } else if (this.state.finishedTransaction) {\r\n      return (\r\n        <div>\r\n          <div className=\"mt-3\">\r\n            Transaction Hash: {this.state.finishedTransaction.transactionHash}\r\n          </div>\r\n          <div>Gas Used: {this.state.finishedTransaction.gasUsed}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  sendERC20Token = async (formValues) => {\r\n    this.setState({\r\n      sending: true,\r\n      sendError: null,\r\n      finishedTransaction: null,\r\n    });\r\n    try {\r\n      const web3State = this.props.web3;\r\n\r\n      const privateKey = \"0x\" + formValues.privateKey;\r\n\r\n      const from = this.props.account;\r\n      const to = formValues.sendTo;\r\n      const valueInERC20Tokens = formValues.value;\r\n\r\n      const provider = new HDWalletProvider(\r\n        privateKey,\r\n        web3State.currentProvider.host\r\n          ? web3State.currentProvider.host\r\n          : web3State.currentProvider.url\r\n      );\r\n\r\n      const tokenTransferWeb3 = new Web3(provider);\r\n\r\n      let contract = new tokenTransferWeb3.eth.Contract(\r\n        ERC20Build.abi,\r\n        formValues.tokenAddress\r\n      );\r\n\r\n      const estimateGas = await contract.methods\r\n        .transfer(formValues.sendTo, valueInERC20Tokens)\r\n        .estimateGas({ from });\r\n      const estimateGasPrice = await web3State.eth.getGasPrice();\r\n\r\n      let gasPrice = formValues.gasPrice\r\n        ? web3State.utils.toWei(formValues.gasPrice, \"gwei\")\r\n        : estimateGasPrice;\r\n      let gasLimit = formValues.gasLimit ? formValues.gasLimit : estimateGas;\r\n\r\n      contract = new tokenTransferWeb3.eth.Contract(\r\n        ERC20Build.abi,\r\n        formValues.tokenAddress,\r\n        { from, gasPrice, gas: gasLimit }\r\n      );\r\n\r\n      const sentTransaction = await contract.methods\r\n        .transfer(to, valueInERC20Tokens)\r\n        .send({ from });\r\n\r\n      this.setState({\r\n        sending: false,\r\n        sendError: null,\r\n        finishedTransaction: sentTransaction,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ sending: false, sendError: error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FinalForm\r\n        onSubmit={this.sendERC20Token}\r\n        render={({ handleSubmit }) => (\r\n          <Form name=\"sendERC20TokenForm\" onSubmit={handleSubmit}>\r\n            <Field\r\n              name=\"tokenAddress\"\r\n              component={this.renderTokenAddressInput}\r\n              validate={validateAddress}\r\n            />\r\n            <Field\r\n              name=\"value\"\r\n              component={this.renderValueInput}\r\n              validate={validateValue}\r\n            />\r\n            <Field\r\n              name=\"sendTo\"\r\n              component={this.renderSendToInput}\r\n              validate={validateAddress}\r\n            />\r\n            <Field\r\n              name=\"gasPrice\"\r\n              component={this.renderGasPriceInput}\r\n              validate={validateValue}\r\n            />\r\n            <Field\r\n              name=\"gasLimit\"\r\n              component={this.renderGasLimitInput}\r\n              validate={validateValue}\r\n            />\r\n            <Field\r\n              name=\"privateKey\"\r\n              component={this.renderPrivateKeyInput}\r\n              validate={this.validatePrivateKey}\r\n            />\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Send\r\n            </Button>\r\n\r\n            {this.renderSendMessage()}\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps)(SendERC20TokensForm);\r\n","import React from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport SendERC20TokensForm from \"./SendERC20TokensForm\";\r\nimport SendETHForm from \"./SendETHForm\";\r\n\r\nclass SendTabs extends React.Component {\r\n  render() {\r\n    return (\r\n      <Tabs\r\n        defaultActiveKey=\"eth\"\r\n        id=\"uncontrolled-tab-example\"\r\n        className=\"mb-3\"\r\n      >\r\n        <Tab eventKey=\"eth\" title=\"ETH\">\r\n          <SendETHForm />\r\n        </Tab>\r\n        <Tab eventKey=\"token\" title=\"ERC20 Token\">\r\n          <SendERC20TokensForm />\r\n        </Tab>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendTabs;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport SendTabs from \"./SendTabs\";\r\n\r\nclass SendCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <Card className=\"mb-5\">\r\n        <Card.Body>\r\n          <Card.Title>Send</Card.Title>\r\n          <SendTabs />\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendCard;\r\n","import React from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBalances, removeToken } from \"../actions\";\r\n\r\nclass TokensList extends React.Component {\r\n  onClickRemoveToken = (token) => {\r\n    this.props.removeToken(token.address);\r\n  };\r\n\r\n  renderTokensList = (tokensList, balances) => {\r\n    return tokensList.map((token) => {\r\n      return (\r\n        <tr key={token.address}>\r\n          <td>\r\n            {this.props.removing ? (\r\n              <Button\r\n                onClick={this.onClickRemoveToken.bind(this, token)}\r\n                variant=\"danger\"\r\n                size=\"sm\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {token.name}\r\n          </td>\r\n          <td>{token.address}</td>\r\n          <td>{balances ? balances[tokensList.indexOf(token)] : \"\"}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Address</th>\r\n            <th>Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.renderTokensList(this.props.tokensList, this.props.balances)}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, { setBalances, removeToken })(\r\n  TokensList\r\n);\r\n","import React from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport Web3 from \"web3\";\r\nimport { addToken } from \"../actions\";\r\n\r\nconst web3 = new Web3();\r\n\r\n// Input validation functions\r\n\r\nconst validateTokenName = (name) => {\r\n  let error = undefined;\r\n  if (!name) {\r\n    error = \"Please enter a name\";\r\n  }\r\n  return error;\r\n};\r\n\r\nclass AddTokenForm extends React.Component {\r\n  validateTokenAddress = (address) => {\r\n    let error = undefined;\r\n    if (!web3.utils.isAddress(address)) {\r\n      error = \"Invalid contract address\";\r\n    } else if (\r\n      this.props.tokensList.find((token) => token.address === address)\r\n    ) {\r\n      error = \"Token alread in list\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  renderError = (meta) => {\r\n    if (meta.touched && meta.error) {\r\n      return <Form.Text className=\"text-danger\">{meta.error}</Form.Text>;\r\n    }\r\n  };\r\n\r\n  renderAddressInput = (formProps) => {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>Address</Form.Label>\r\n        <Form.Control type=\"text\" autoComplete=\"off\" {...formProps.input} />\r\n        {this.renderError(formProps.meta)}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  renderNameInput = (formProps) => {\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control type=\"text\" autoComplete=\"off\" {...formProps.input} />\r\n        {this.renderError(formProps.meta)}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.addToken(formValues.address, formValues.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FinalForm\r\n        onSubmit={this.onSubmit}\r\n        render={({ handleSubmit }) => (\r\n          <Form name=\"addTokenForm\" onSubmit={handleSubmit}>\r\n            <Field\r\n              name=\"address\"\r\n              component={this.renderAddressInput}\r\n              validate={this.validateTokenAddress}\r\n            />\r\n            <Field\r\n              name=\"name\"\r\n              component={this.renderNameInput}\r\n              validate={validateTokenName}\r\n            />\r\n            <Button className=\"mt-3\" type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, { addToken })(AddTokenForm);\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport AddTokenForm from \"./AddTokenForm\";\r\n\r\nfunction AddTokenModal() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\r\n        Add\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Token</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <AddTokenForm />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddTokenModal;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport TokensList from \"./TokensList\";\r\nimport AddTokenModal from \"./AddTokenModal\";\r\n\r\nclass TokensCard extends React.Component {\r\n  state = { removing: false };\r\n\r\n  onClickRemove = () => {\r\n    this.setState({ removing: !this.state.removing });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>Tokens</Card.Title>\r\n          <AddTokenModal />\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            onClick={this.onClickRemove}\r\n          >\r\n            Remove\r\n          </Button>\r\n\r\n          <div className=\"mt-2\">\r\n            <TokensList className=\"mt-2\" removing={this.state.removing} />\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TokensCard;\r\n","import React from \"react\";\r\nimport { Navbar, Container, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass NavbarCustom extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-center\">\r\n        <Container>\r\n          <Col xs={4}>\r\n            <Navbar.Brand>Multi Token Wallet</Navbar.Brand>\r\n          </Col>\r\n          <Col xs={4}>\r\n            <Navbar.Collapse className=\"justify-content-center\">\r\n              <Navbar.Text>{this.props.ethBalance} ETH</Navbar.Text>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n          <Col xs={4}>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Navbar.Text>{this.props.account}</Navbar.Text>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps)(NavbarCustom);\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport AccountCard from \"./AccountCard\";\r\nimport SendCard from \"./SendCard\";\r\nimport TokensCard from \"./TokensCard\";\r\nimport NavbarCustom from \"./NavbarCustom\";\r\n\r\nclass Content extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"mb-5\">\r\n          <NavbarCustom />\r\n        </div>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n              <Row className=\"mb-3\">\r\n                <AccountCard />\r\n              </Row>\r\n              <Row>\r\n                <SendCard />\r\n              </Row>\r\n            </Col>\r\n            <Col xs={6}>\r\n              <TokensCard />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Content from \"./Content\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Content />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { CHANGE_ACCOUNT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = null;\r\nconst accountReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_ACCOUNT:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default accountReducer;\r\n","import Web3 from \"web3\";\r\nimport { SET_WEB3_PROVIDER } from \"../actions/types\";\r\nimport INFURA_NODES from \"../helpers/INFURA_NODES\";\r\n\r\nconst INITIAL_STATE = new Web3(INFURA_NODES.Mainnet);\r\n\r\nconst web3Reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_WEB3_PROVIDER:\r\n      return new Web3(action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default web3Reducer;\r\n","import { DEFAULT_TOKENS } from \"../helpers/DEFAULT_TOKENS\";\r\nimport { ADD_TOKEN, REMOVE_TOKEN } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = DEFAULT_TOKENS;\r\n\r\nconst tokensListReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_TOKEN:\r\n      return [...state, action.payload];\r\n    case REMOVE_TOKEN:\r\n      return state.filter((token) => token.address !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tokensListReducer;\r\n","export const DEFAULT_TOKENS = [\r\n  {\r\n    name: \"BNB\",\r\n    address: \"0xB8c77482e45F1F44dE1745F52C74426C631bDD52\",\r\n  },\r\n  {\r\n    name: \"USDT\",\r\n    address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n  },\r\n  {\r\n    name: \"HEX\",\r\n    address: \"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\",\r\n  },\r\n  {\r\n    name: \"USDC\",\r\n    address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\r\n  },\r\n  {\r\n    name: \"LINK\",\r\n    address: \"0x514910771af9ca656af840dff83e8264ecf986ca\",\r\n  },\r\n];\r\n","import { SET_BALANCES } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = null;\r\n\r\nconst balancesReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_BALANCES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default balancesReducer;\r\n","import { SET_ETH_BALANCE } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = null;\r\nconst ethBalanceReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_ETH_BALANCE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ethBalanceReducer;\r\n","import { CHANGE_NETWORK } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = \"Mainnet\";\r\nconst accountReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_NETWORK:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default accountReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport accountReducer from \"./accountReducer\";\r\nimport web3Reducer from \"./web3Reducer\";\r\nimport tokensListReducer from \"./tokensListReducer\";\r\nimport balancesReducer from \"./balancesReducer\";\r\nimport ethBalanceReducer from \"./ethBalanceReducer\";\r\nimport networkReducer from \"./networkReducer\";\r\n\r\nexport default combineReducers({\r\n  account: accountReducer,\r\n  web3: web3Reducer,\r\n  tokensList: tokensListReducer,\r\n  balances: balancesReducer,\r\n  ethBalance: ethBalanceReducer,\r\n  network: networkReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}